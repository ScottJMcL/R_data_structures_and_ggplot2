#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = 'yellow')) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = 'yellow')) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = 'red')) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, fill = 'red')) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = 'blue')) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = blue)) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = 'blue')) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = 'salmon')) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = sea_lvl_mm)) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = Date)) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, color = sea_lvl_mm)) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm)) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm, position = 'jitter')) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm)) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
names <- c('John', 'James', 'Jenny', 'Jake', 'Jan')
names
typeof(names)
length(names)
# Note this returns "John", the first element in our Vector
names[1]
# Generate a sequence from 5 to 15
my_seq <- 5:15
print(my_seq)
# Generate a sequence with decimals
# Generate a sequence with decimals
my_seq_2 <- 5.5:15.5
my_seq_2
# Step from 5 to 15 by increments of .3
my_seq_3 <- seq(5,15, 0.3)
my_seq_3
# Step from 5 to 15 by increments of .3
my_seq_3 <- seq(5,15, 0.3)
my_seq_3
# Step from 5 to 15 by increments of .3
my_seq_3 <- seq(5,15, 0.3)
print(my_seq_3)
my_vector <- c(10,19, 4,-2, -6, 0, 1200000)
print(my_vector)
sort(my_vector)
print(my_vector)
vector_1 = c(1,2,3,4,5,6)
vector_2 = c(4,5,6,7,8,9)
add_vector <- vector_1 + vector_2
add_vector
subt_vector <- vector_1 - vector_2
subt_vector
mult_vector <- vector_1 * vector_2
mult_vector
div_vector <- vector_1 / vector_2
div_vector
vector_1 <- c(1,2,3)
vector_2 <- c(4,5,6,7,8,9)
vector_add <- vector_1 + vector_2
vector_1 <- c(1,2,3)
vector_2 <- c(4,5,6,7,8,9)
vector_add <- vector_1 + vector_2
vector_add
student_grades <- c(94, 96, 42, 98, 75, 82)
student_names <- c('John', 'Jake', 'Jimmy', 'Jane', 'Jason', 'Jenny')
student_count <- lenth(student_names)
student_grades <- c(94, 96, 42, 98, 75, 82)
student_names <- c('John', 'Jake', 'Jimmy', 'Jane', 'Jason', 'Jenny')
student_count <- length(student_names)
student_list <- list(student_grades, student_names, student_count)
student_list
student_list[[2]]
student_name <- c('John', 'Jake', 'Jenny')
student_grade_lvl <- c('Sophmore', 'Junior', 'Senior')
student_class_grade <- c(65, 82, 91)
# Create a dataframe from these three vectors, each vectorin its own column.
df <- data.frame(student_name, student_grade_lvl, student_class_grade)
df
str(df)
summary(df)
student_grades <- df$student_grade_lvl
student_grades
# Get the first two rows and all of the columns
df[1:2,]
# Get the first two rows and all of the columns
df[1:2]
# Get the first two rows and all of the columns
df[1:2,]
# Get the first and third rows and all of the columns
df[1,3),]
# Get the first and third rows and all of the columns
df[1,3,]
# Get the first and third rows and all of the columns
df[1:3,]
# Get the first and third rows and all of the columns
df[c(1:3),]
# Get the first and third rows and all of the columns
df[c(1,3),]
# Get the first and third rows and the first and third columns
df[c(1,3),c(1,3)]
df$student_subject <- c('Math', 'History', 'English')
df
student_name <- c('Jan', 'Jimmy')
student_grade_lvl <- c('Freshman', 'Senior')
student_class_grade <- c(82, 64)
student_subject <- c('Math', 'History')
new_df <- data.frame(
student_name,
student_grade_lvl,
student_class_grade,
student_subject
)
combined_df <- rbind(df, new_df)
combined_df
View(morley)
# Find a builtin data set for students to explore; use their cheat sheet from stats to label continuous and discrete data; Analyze that data set, create graphs, find a hypothesis
# use graphs to tell me about 3 data sets to tell something Bradon didn't know
# ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
#   geom_point(mapping = aes(color = class)) +
#   geom_smooth(se = FALSE)
# Higher hp cars get lower mpg (Duh). Higher number of gears seems to give higher MPG
# I don't like that this gives gradient color for gears, or understand why.
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point(mapping = aes(color = gear))
# 4 gears seems to give the highest mpg, but with a wide spread.
ggplot(data = mtcars, mapping = aes(x = gear, y = mpg)) +
geom_point(mapping = aes(color = hp))
# Lower HP gives longer 1/4 mile time (duh)
ggplot(data = mtcars, mapping = aes(x = hp, y = qsec)) +
geom_point(mapping = aes(color = gear)) +
geom_smooth(mapping = aes(x = hp, y = qsec))
{r}
pie = ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
position = "fill" # try "dodge" instead of "fill"...graph makes no sense.
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
pie + coord_polar()
# Find a builtin data set for students to explore; use their cheat sheet from stats to label continuous and discrete data; Analyze that data set, create graphs, find a hypothesis
# use graphs to tell me about 3 data sets to tell something Bradon didn't know
# ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
#   geom_point(mapping = aes(color = class)) +
#   geom_smooth(se = FALSE)
# Higher hp cars get lower mpg (Duh). Higher number of gears seems to give higher MPG
# I don't like that this gives gradient color for gears, or understand why.
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point(mapping = aes(color = gear))
# 4 gears seems to give the highest mpg, but with a wide spread.
ggplot(data = mtcars, mapping = aes(x = gear, y = mpg)) +
geom_point(mapping = aes(color = hp))
# Lower HP gives longer 1/4 mile time (duh)
ggplot(data = mtcars, mapping = aes(x = hp, y = qsec)) +
geom_point(mapping = aes(color = gear)) +
geom_smooth(mapping = aes(x = hp, y = qsec))
{r}
# Find a builtin data set for students to explore; use their cheat sheet from stats to label continuous and discrete data; Analyze that data set, create graphs, find a hypothesis
# use graphs to tell me about 3 data sets to tell something Bradon didn't know
# ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
#   geom_point(mapping = aes(color = class)) +
#   geom_smooth(se = FALSE)
# Higher hp cars get lower mpg (Duh). Higher number of gears seems to give higher MPG
# I don't like that this gives gradient color for gears, or understand why.
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point(mapping = aes(color = gear))
# 4 gears seems to give the highest mpg, but with a wide spread.
ggplot(data = mtcars, mapping = aes(x = gear, y = mpg)) +
geom_point(mapping = aes(color = hp))
# Lower HP gives longer 1/4 mile time (duh)
ggplot(data = mtcars, mapping = aes(x = hp, y = qsec)) +
geom_point(mapping = aes(color = gear)) +
geom_smooth(mapping = aes(x = hp, y = qsec))
View(mtcars)
view(morley)
view(morley)
ggplot(data = morley, mapping = aes(x = Expt, y = Speed)) +
geom_boxplot(mapping = aes(x = Expt, group = Expt, fill = Expt)) +
labs(x = "Experiment #", y = "Speed of light (km/sec)", title = "Speed of light (km/sec)", subtitle = "Dataset shows c ~= 299,850 km/sec.  Newer data gives c = 299,792.458 km/s")
# view(morley)
ggplot(data = morley, mapping = aes(x = Expt, y = Speed)) +
geom_boxplot(mapping = aes(x = Expt, group = Expt, fill = Run)) +
labs(x = "Experiment #", y = "Speed of light (km/sec)", title = "Speed of light (km/sec)", subtitle = "Dataset shows c ~= 299,850 km/sec.  Newer data gives c = 299,792.458 km/s")
# view(morley)
ggplot(data = morley, mapping = aes(x = Expt, y = Speed)) +
geom_boxplot(mapping = aes(x = Expt, group = Expt, fill = Speed)) +
labs(x = "Experiment #", y = "Speed of light (km/sec)", title = "Speed of light (km/sec)", subtitle = "Dataset shows c ~= 299,850 km/sec.  Newer data gives c = 299,792.458 km/s")
# view(morley)
ggplot(data = morley, mapping = aes(x = Expt, y = Speed)) +
geom_boxplot(mapping = aes(x = Expt, group = Expt, fill = Expt)) +
labs(x = "Experiment #", y = "Speed of light (km/sec)", title = "Speed of light (km/sec)", subtitle = "Dataset shows c ~= 299,850 km/sec.  Newer data gives c = 299,792.458 km/s")
my_matrix <- matrix(
c(10,9,8,7,6,5,4,3,2,1),
nrow = 2,
ncol = 5,
byrow = FALSE,
dinames <- list(c('Row 1', 'Row 2'))
)
my_matrix
my_matrix <- matrix(
c(10,9,8,7,6,5,4,3,2,1),
nrow = 3,
ncol = 5,
byrow = FALSE,
dinames <- list(c('Row 1', 'Row 2', 'Roe 3'))
)
my_matrix
my_matrix2 <- matrix(
c(10,9,8,7,6,5,4,3,2,1),
nrow = 3,
ncol = 5,
byrow = FALSE,
dinames <- list(c('Row 1', 'Row 2', 'Roe 3'), c('Col1', 'Col2', 'Col3', 'Col4', 'Col5'))
)
my_matrix2
# Get the element in the 2nd row and 4th column
my_matrix[2,4]
print(my_matrix[2,])
print('The entire second row')
print(my_matrix[2,])
print('--------------------')
print('The entire third column:')
print(my_matrix[,3])
matrix_1 <-  matrix(c(1,2,3,4,5,6), nrow = 3)
matrix_2 <- matrix(c(4,5,6,7,8,9), nrow = 3)
matrix_1
matrix_2
matrix_1 <-  matrix(c(1,2,3,4,5,6), nrow = 3)
matrix_2 <- matrix(c(4,5,6,7,8,9), nrow = 3)
print('matrix_1:', matrix_1)
matrix_2
matrix_1 <-  matrix(c(1,2,3,4,5,6), nrow = 3)
matrix_2 <- matrix(c(4,5,6,7,8,9), nrow = 3)
print('matrix_1:')
print(matrix_1)
print('--------------')
print('matrix_2:')
print(matrix_2)
matrix_1 <-  matrix(c(1,2,3,4,5,6), nrow = 3)
matrix_2 <- matrix(c(4,5,6,7,8,9), nrow = 3)
print('matrix_1:')
print(matrix_1)
print('')
print('matrix_2:')
print(matrix_2)
matrix_1 <-  matrix(c(1,2,3,4,5,6), nrow = 3)
matrix_2 <- matrix(c(4,5,6,7,8,9), nrow = 3)
print('matrix_1:')
print(matrix_1)
print()
matrix_1 <-  matrix(c(1,2,3,4,5,6), nrow = 3)
matrix_2 <- matrix(c(4,5,6,7,8,9), nrow = 3)
print('matrix_1:')
print(matrix_1)
print('')
print('matrix_2:')
print(matrix_2)
add_mat <- matrix_1 + matrix_2
add_mat
sub_mat <- matrix_1 - matrix_2
sub_mat
mult_mat <- matrix_1 * matrix_2
mult_mat
div_mat <- matrix_1 / matrix_2
div_mat
myplot <- mpg
myplot
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y = hwy, color = displ < 5))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = rgb(0.8, 1, 0.3))) +
facet_wrap(~ class, nrow = 2)
#ggplot(data = mpg) +
#  geom_point(mapping = aes(x = displ, y = hwy, shape = class)) +
#  facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x= displ, y = hwy, color = drv)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x= displ, y = hwy, linetype = drv)) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(se = FALSE)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
# Same as above!!
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
pie = ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
position = "fill" # try "dodge" instead of "fill"...graph makes no sense.
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
pie + coord_polar()
# alt- becomes <- (option- on mac)
# Find a builtin data set for students to explore; use their cheat sheet from stats to label continuous and discrete data; Analyze that data set, create graphs, find a hypothesis
# use graphs to tell me about 3 data sets to tell something Bradon didn't know
View(mtcars)
# Higher hp cars get lower mpg (Duh). Higher number of gears seems to give higher MPG
# I don't like that this gives gradient color for gears, or understand why.
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg)) +
geom_point(mapping = aes(color = gear))
# 4 gears seems to give the highest mpg, but with a wide spread.
ggplot(data = mtcars, mapping = aes(x = gear, y = mpg)) +
geom_point(mapping = aes(color = hp))
# Lower HP gives longer 1/4 mile time (duh)
ggplot(data = mtcars, mapping = aes(x = hp, y = qsec)) +
geom_point(mapping = aes(color = gear)) +
geom_smooth(mapping = aes(x = hp, y = qsec))
# view(morley)
# Again, why is fill giving a continuous spectrum rather than distinct colors?
ggplot(data = morley, mapping = aes(x = Expt, y = Speed)) +
geom_boxplot(mapping = aes(x = Expt, group = Expt, fill = Expt)) +
labs(x = "Experiment #", y = "Speed of light (km/sec)", title = "Speed of light (km/sec)", subtitle = "Dataset shows c ~= 299,850 km/sec.  Newer data gives c = 299,792.458 km/s")
# View(chickwts)
ggplot(data = chickwts) +
geom_boxplot(mapping = aes(x = feed, y = weight, fill = feed)) +
labs(title = 'Chick weight as vs. feed supliment', y = 'weight (g)')
#View(gmsl)
ggplot(data = GMSL)+
geom_point(mapping = aes(x = Date, y = sea_lvl_mm)) +
geom_smooth(mapping = aes(x = Date, y = sea_lvl_mm)) +
labs(title = "Global Mean Sea Level 1992 - 2013", subtitle = "data courtesy of https://sealevel.colorado.edu/", y = 'Sea level (mm) relative to 1996')
View(chickwts)
View(morley)
View(morley)
# Why is fill giving a continuous spectrum rather than distinct colors?
# Must be because of third column, Run.
ggplot(data = morley, mapping = aes(x = Expt, y = Speed)) +
geom_boxplot(mapping = aes(x = Expt, group = Expt, fill = Expt)) +
labs(x = "Experiment #", y = "Speed of light (km/sec)", title = "Speed of light (km/sec)", subtitle = "Dataset shows c ~= 299,850 km/sec.  Newer data gives c = 299,792.458 km/s")
print('Hi')
morley_mine <- morley[-c(3)]
View(morley_mine)
morley_mine <- morley[-c(2)]
#View(morley_mine)
# Why is fill giving a continuous spectrum rather than distinct colors?
# Must be because of third column, Run.
ggplot(data = morley_mine, mapping = aes(x = Expt, y = Speed)) +
geom_boxplot(mapping = aes(x = Expt, group = Expt, fill = Expt)) +
labs(x = "Experiment #", y = "Speed of light (km/sec)", title = "Speed of light (km/sec)", subtitle = "Dataset shows c ~= 299,850 km/sec.  Newer data gives c = 299,792.458 km/s")
View(morley_mine)
# View(morley_mine)
# Why is fill giving a continuous spectrum rather than distinct colors?
# Must be because of third column, Run.
# Nope, even with Run removed it's still like that.
ggplot(data = morley_mine, mapping = aes(x = Expt, y = Speed)) +
geom_boxplot(mapping = aes(x = Expt, group = Expt, fill = Expt)) +
labs(x = "Experiment #", y = "Speed of light (km/sec)", title = "Speed of light (km/sec)", subtitle = "Dataset shows c ~= 299,850 km/sec.  Newer data gives c = 299,792.458 km/s")
my_array <- array(
# Data
(124, 254, 116, 123, 923, 102, 12),
my_array <- array(
# Data
c(124, 254, 116, 123, 923, 102, 12),
# Dimensions
dim <- c(3,3,3)
)
my_array
my_array <- array(
# Data
c(124, 254, 116, 123, 923, 102, 12),
# Dimensions
dim <- c(3,3,4)
)
my_array
my_array <- array(
# Data
c(124, 254, 116, 123, 923, 102, 12),
# Dimensions
dim <- c(3,4,3)
)
my_array
my_array <- array(
# Data
c(124, 254, 116, 123, 923, 102, 12),
# Dimensions
dim <- c(4,3,3)
)
my_array
my_array <- array(
# Data
c(124, 254, 116, 123, 923, 102, 12),
# Dimensions
dim <- c(3,3,3),
# row/col names
dimnames = list(c('Roe1', 'Roe2', 'Roe3'),c('Col1', 'Col2', 'Col3'), c'Mat1', 'Mat2', 'Mat3')
my_array <- array(
# Data
c(124, 254, 116, 123, 923, 102, 12),
# Dimensions
dim <- c(3,3,3),
# row/col names
dimnames = list(c('Roe1', 'Roe2', 'Roe3'),c('Col1', 'Col2', 'Col3'), c('Mat1', 'Mat2', 'Mat3'))
)
my_array
# Get the element in the second row, third column, first matrix
my_matrix[2,3,1]
# Get the element in the second row, third column, first matrix
my_array[2,3,1]
# Get the second row of all of the matrices
my_array[2,,]
# Get the second column of all of the matrices
my_array[,2,]
# Get the second matrix
my_array[,,2]
# A factor of eye colors
my_factor <- factor(
c('Blue', 'Green', 'Blue', 'Blue', 'Green', 'Gray'),
levels <- c('Blue', 'Gray', 'Brown', 'Green')
)
print(my_factor)
print(sort(my_factor))
first_vector <- c(1,2,3,4,5,6,7,8,9)
second_vector <- c(9,8,7,6,5,4,3,2,1)
first_vector <- c(1,2,3,4,5,6,7,8,9)
second_vector <- c(9,8,7,6,5,4,3,2,1)
Ghazunteit = array(first_vector + second_vector, dim <- (3,3))
Ghazunteit = array(first_vector + second_vector, dim <- c(3,3))
Ghazunteit
Ghazunteit = array(paste(first_vector, second_vector), dim <- c(3,3))
Ghazunteit
Ghazunteit = array(first_vector + second_vector, dim <- c(3,3,2))
Ghazunteit
Ghazunteit = array(first_vector, dim <- c(3,3))
Ghazunteit
ineedcoffee = array(second_vector, dim = c(3,3))
ineedcoffee
Ghazunteit = array(first_vector, dim <- c(3,3))
Ghazunteit
ineedcoffee = array(second_vector, dim = c(3,3))
ineedcoffee
ordidyoumeanthis = array(paste(first_vector,second_vector), dim(c(3,3,2)))
Ghazunteit = array(first_vector, dim <- c(3,3))
Ghazunteit
ineedcoffee = array(second_vector, dim = c(3,3))
ineedcoffee
ordidyoumeanthis = array(paste(first_vector,second_vector), dim(c(3,3,2))
ordidyoumeanthis
Ghazunteit = array(first_vector, dim <- c(3,3))
Ghazunteit
ineedcoffee = array(second_vector, dim = c(3,3))
ineedcoffee
ordidyoumeanthis = array(paste(first_vector,second_vector), dim <- c(3,3,2))
ordidyoumeanthis
ineedcoffee[2,2]
print(ineedcoffee[2,2])
print(ordidyoumeanthis[3,,1])
print(ineedcoffee[2,2])
print(ordidyoumeanthis[3,,1])
print(ordidyoumeanthis[,2,])
print(ineedcoffee[2,2])
print(ordidyoumeanthis[3,,1])
print(ordidyoumeanthis[,2,])
